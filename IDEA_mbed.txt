Idea for mbed microcontroller
-----------------------------

1) Config file on mbed Controller:
   #
   # host section <key> : <value>
   #
   host: kinkeldei-net.de
   port: 81
   path: /sensor/erlangen
   id: mbed-42              # falls HMAC eingesetzt wird, sonst leer
   secret: xxxx             # falls HMAC eingesetzt wird, sonst leer
   
   #
   # ntp section
   #
   ntp: 1.2.3.4
   
   #
   # sensor section <Kind><Pin> : <url_part> [ <display name> ]
   #
   T26: buero/temperatur    Buero
   T27: aussen/temperatur   Aussen
   S28: wasser/status       Wasser


2) Digest::HMAC-SHA1 Authorization
   Verb + Content-Type + Content-Length + Date + Id
   Header: Authorization: HMAC ID base_64_hmac


3) Display : 2 x 16 Stellen

    1234567890ABCDEF
   [Buero       52°C]
   [T26> D N x 11:42]
    ^  ^ ^ ^ ^   ^
    |  | | | |   |
    |  | | | |   |
    |  | | | |   +-- Uhrzeit "hh:mm" / Datum "Mar03" / Uptime "  42d"
    |  | | | |
    |  | | | +-- Reserve
    |  | | |
    |  | | +-- NTP Status: t=lesen, T=ok, ?=error
    |  | |
    |  | +-- Netz: Init Nslookup Post Ok Error 0-9 = in x Minuten gehts los
    |  |
    |  +-- < senden, > lesen, = fertig, ? fehler
    |
    +-- gerade/zuletzt gemessener Sensor


4) Klassen


Config -- Lesen der Konfigurations-Datei
  char *host()
  int port()
  char *path()
  void rewind_sensors()
  SensorConfig *next_sensor()


SensorConfig -- Konfig-Einstellung für einen Sensor
  Sensor create_sensor()

Sensor -- Basisklasse für alle Sensoren
  Sensor(int pin, char *url_part, char *name)
  
